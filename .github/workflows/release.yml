name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers the workflow on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32
        with:
          go-version: 1.22.6

      - name: Get version tag
        id: get_version
        run: echo "VERSION_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build binary
        run: |
          mkdir -p dist
          suffix=""
          if [ "${{ matrix.goos }}" == "windows" ]; then suffix=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/git-secrets-replacer-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.VERSION_TAG }}${suffix}

      - name: Create Linux zip file
        if: matrix.goos == 'linux'
        run: |
          cat > dist/terminal.sh << EOL
          #!/bin/bash
          DIR="\$(cd "\$(dirname "\${BASH_SOURCE[0]}")" && pwd)"
          "\$DIR/git-secrets-replacer-linux-${{ matrix.goarch }}-${{ env.VERSION_TAG }}"
          EOL
          chmod +x dist/terminal.sh
          zip -j "dist/git-secrets-replacer-linux-${{ matrix.goarch }}-${{ env.VERSION_TAG }}.zip" "dist/git-secrets-replacer-linux-${{ matrix.goarch }}-${{ env.VERSION_TAG }}" "dist/terminal.sh"

      - name: Upload build artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: git-secrets-replacer-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.VERSION_TAG }}
          path: |
            dist/git-secrets-replacer-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.VERSION_TAG }}*
            dist/git-secrets-replacer-linux-${{ matrix.goos }}-${{ env.VERSION_TAG }}.zip

  release:
    runs-on: ubuntu-latest
    needs: [build]

    permissions:  # Add permissions for OIDC token and content read access
      id-token: write
      contents: read

    steps:
      - name: Get version tag
        run: echo "VERSION_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Download build artifacts for linux-amd64
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: git-secrets-replacer-linux-amd64-${{ env.VERSION_TAG }}
          path: dist

      - name: Download build artifacts for linux-arm64
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: git-secrets-replacer-linux-arm64-${{ env.VERSION_TAG }}
          path: dist

      - name: Download build artifacts for windows-amd64
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: git-secrets-replacer-windows-amd64-${{ env.VERSION_TAG }}
          path: dist

      - name: Download build artifacts for windows-arm64
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: git-secrets-replacer-windows-arm64-${{ env.VERSION_TAG }}
          path: dist

      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/download/v2.4.0/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign artifacts with Cosign
        run: |
          for file in dist/*; do
            cosign sign-blob --yes $file
            fi
          done

      - name: Generate SLSA Provenance
        uses: slsa-framework/slsa-github-generator/actions/generator/generic/create-base64-subjects-from-file@5a775b367a56d5bd118a224a811bba288150a563
        with:
          path: dist/provenance.json

      - name: Generate checksums
        run: |
          cd dist
          for file in *; do
            sha256sum "$file" > "$file.sha256"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          files: |
            dist/git-secrets-replacer-linux-amd64-${{ env.VERSION_TAG }}.zip
            dist/git-secrets-replacer-linux-arm64-${{ env.VERSION_TAG }}.zip
            dist/git-secrets-replacer-windows-amd64-${{ env.VERSION_TAG }}.exe
            dist/git-secrets-replacer-windows-arm64-${{ env.VERSION_TAG }}.exe
            dist/*.sha256
            dist/provenance.json
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
